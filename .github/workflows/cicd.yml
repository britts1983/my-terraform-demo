name: Infra (Terraform + Ansible)

on:
  workflow_dispatch: {}   # manual run creates the bucket
  push:
    branches: [ main ]    # push will also run apply; remove if you want plan-only

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - uses: hashicorp/setup-terraform@v3

      # 1) Who am I? (proves the AWS account)
      - name: AWS identity
        run: aws sts get-caller-identity

      # Pick a unique bucket name or use repo var
      - name: Pick bucket name
        run: |
          if [ -n "${{ vars.BUCKET_NAME }}" ]; then
            echo "BUCKET_NAME=${{ vars.BUCKET_NAME }}" >> $GITHUB_ENV
          else
            echo "BUCKET_NAME=tf-${GITHUB_REPOSITORY_OWNER,,}-${GITHUB_RUN_ID}" >> $GITHUB_ENV
          fi
          echo "Bucket: $BUCKET_NAME"

      - name: Init
        run: terraform init -input=false

      - name: Validate
        run: terraform validate

      - name: Plan
        run: terraform plan -input=false -var="bucket_name=${{ env.BUCKET_NAME }}"

      - name: Apply
        run: terraform apply -auto-approve -input=false -var="bucket_name=${{ env.BUCKET_NAME }}"

      # 2) Verify from AWS API the bucket now exists
      - name: Verify bucket exists
        run: |
          aws s3api head-bucket --bucket "$BUCKET_NAME" && echo "✅ Bucket exists" || (echo "❌ Bucket not found"; exit 1)

  ansible:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - uses: actions/checkout@v4
      - name: Install Ansible
        if: ${{ hashFiles('ansible/main.yml') != '' }}
        run: |
          python -m pip install --upgrade pip
          pip install ansible
      - name: Syntax check
        if: ${{ hashFiles('ansible/main.yml') != '' }}
        working-directory: ansible
        run: ansible-playbook -i localhost, -c local main.yml --syntax-check