name: Infra (Terraform + Ansible)

on:
  workflow_dispatch: {}   # run manually to actually create the bucket

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: terraform } }
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - uses: hashicorp/setup-terraform@v3

      - name: Init
        run: terraform init -input=false

      # Use repo variable BUCKET_NAME if set; else generate a unique name
      - name: Pick bucket name
        run: |
          if [ -n "${{ vars.BUCKET_NAME }}" ]; then
            echo "BUCKET_NAME=${{ vars.BUCKET_NAME }}" >> $GITHUB_ENV
          else
            echo "BUCKET_NAME=tf-${{ github.repository_owner }}-${{ github.run_id }}" >> $GITHUB_ENV
          fi
          echo "Bucket: $BUCKET_NAME"

      - name: Plan
        run: terraform plan -input=false -var="bucket_name=${{ env.BUCKET_NAME }}"

      - name: Apply
        run: terraform apply -auto-approve -input=false -var="bucket_name=${{ env.BUCKET_NAME }}"

      - name: Show outputs
        run: terraform output || true

  ansible:
    runs-on: ubuntu-latest
    needs: terraform
    defaults: { run: { working-directory: ansible } }
    steps:
      - uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Syntax check
        run: ansible-playbook -i localhost, -c local main.yml --syntax-check
